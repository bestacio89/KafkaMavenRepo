name: Integration and Testing

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  push:
    branches: ['develop']
  pull_request:
    branches: ['develop']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: Integration and Testing

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build Docker Images and Start Services
        env:
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/TestDB
          SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        run: |
          # Build and start services, skipping tests during build
          docker compose -f docker/docker-compose.yml up -d
          docker compose -f docker/docker-compose.yml run --rm app mvn clean package -DskipTests

  Test:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Run Maven Tests
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/TestDB
          SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        run: |
          # Run tests in the 'app' service
          docker compose -f docker/docker-compose.yml -f docker/docker-compose.test.yml run --rm app mvn test

  Clean_Up_Environment:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Tear Down Docker Stack
        run: |
          docker compose -f docker/docker-compose.yml down