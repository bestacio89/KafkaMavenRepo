name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Run on pushes to main branch
  pull_request:

jobs:
  build:
    name: Build and Deploy to Kubernetes
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io  # GitHub Container Registry or Docker Hub
      IMAGE_NAME: ${{ github.repository }}/myapp  # Change for each service
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}  # Kubernetes config from GitHub Secrets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Container Registry
        run: echo "${{ secrets.REGISTRY_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ secrets.REGISTRY_USER }} --password-stdin

      - name: Build and Push Docker Image (Kafka)
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:kafka-latest ./kubernetes/kafka
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:kafka-latest

      - name: Build and Push Docker Image (Zookeeper)
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:zookeeper-latest ./kubernetes/zookeeper
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:zookeeper-latest

      - name: Build and Push Docker Image (MongoDB)
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mongodb-latest ./kubernetes/mongodb
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:mongodb-latest

      - name: Build and Push Docker Image (Postgres)
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:postgres-latest ./kubernetes/postgres
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:postgres-latest

      - name: Build and Push Docker Image (SpringApp)
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:app-latest ./kubernetes/springapp
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:app-latest

      - name: Set up Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin

      - name: Deploy to Kubernetes Cluster
        run: |
          echo "${{ env.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          kubectl apply -k ./kubernetes
